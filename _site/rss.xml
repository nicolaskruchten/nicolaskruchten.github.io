<?xml version="1.0"?>
	<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
		<channel>
			<title>nicolas.kruchten.com</title>
			<link>http://air.local:4000</link>
			<description>false</description>
			<language>en-us</language>
			<pubDate>Sun, 05 Jan 2014 00:02:15 EST</pubDate>
			<lastBuildDate>Sun, 05 Jan 2014 00:02:15 EST</lastBuildDate>
			<docs>http://blogs.law.harvard.edu/tech/rss</docs>
			<generator>http://github.com/thedereck/gh-pages-blog</generator>
			<atom:link href="http://air.local:4000/rss.xml" rel="self" type="application/rss+xml" />

			

			

			
				<ttl>300</ttl>
			

			

			
				<item>
					
						<title>Wanderer v2, with Wireless Wii Nunchuck</title>
					
					<link>http://air.local:4000/content/2010/10/wanderer-v2-with-wireless-wii-nunchuck</link>

					

					<pubDate>Sat, 23 Oct 2010 00:00:00 EDT</pubDate>
					<guid>http://air.local:4000/content/2010/10/wanderer-v2-with-wireless-wii-nunchuck</guid>

					

					<description><![CDATA[  ]]></description>
					<content:encoded><![CDATA[ <h4></h4><div class="text-center">
                            <object type="application/x-shockwave-flash" wmode="opaque" width="432" height="243" data="http%3A%2F%2Fwww.flickr.com%2Fapps%2Fvideo%2Fstewart.swf%3Fv%3D137818%26photo_id%3D5079647113%26photo_secret%3D757164778c" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">
                                <param name="movie" value="http%3A%2F%2Fwww.flickr.com%2Fapps%2Fvideo%2Fstewart.swf%3Fv%3D137818%26photo_id%3D5079647113%26photo_secret%3D757164778c"></param>
                                <param name="bgcolor" value="#000000"></param>
                                <param name="allowFullScreen" value="true"></param>
                                <param name="wmode" value="opaque" />
                                <embed type="application/x-shockwave-flash" src="http://www.flickr.com/apps/video/stewart.swf?v=137818&photo_id=5079647113&photo_secret=757164778c" bgcolor="#000000" allowfullscreen="true" flashvars="intl_lang=en-us&amp;photo_secret=757164778c&amp;photo_id=5079647113" height="243" width="432" wmode="opaque"></embed>
                            </object>
                        </div>
                    <br />
<p>After building my little <a href="http://nicolas.kruchten.com/content/2010/10/arduino-wanderer/">autonomous wanderer robot</a>, I saw this <a href="http://www.youtube.com/watch?v=KRlQTBPtYfc">iPad-controlled blimp</a> and went ahead and added iPad control to my robot too. I had a Python script on my iMac which took commands from the iPad over Wifi and relayed them to the Arduino using XBee. I demo&#8217;ed this at <a href="http://www.bitnorth.com/2010/">BitNorth 2010</a>, but I&#8217;m not sure if the video is up yet. That said, the fact that all the commands were relayed through a &#8216;base station&#8217; bothered me, and I saw a cheap wireless Wii Nunchuk which I immediately bought, thinking I could make it into a really ergonomic remote control for my little robot. I probably could have gotten a Wifi shield instead, but I was up for a different kind of challenge.
</p>
    <!-- more -->
<p>The Wii Nunchuck (wired or wireless) communicates using the I2C protocol, which the <a href="http://www.arduino.cc/en/Reference/Wire">Arduino supports</a> quite nicely. There exists a cheap little hardware <a href="http://todbot.com/blog/2008/02/18/wiichuck-wii-nunchuck-adapter-available/">Arduino/Nunchuck interface</a> but I had no use for the little white casing around the receiver that&#8217;s supposed to plug into the WiiMote so I cracked it open and interfaced the little circuit board inside directly to my Arduino. After a lot of experimentation and reading of <a href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1259091426">forum posts</a> and <a href="http://wiibrew.org/wiki/Wiimote/Extension_Controllers#Nyko_Kama">wikis</a>, I found a magic incantation of bytes to send to my particular Nunchuck that would enable me to pull data from it reliably, and I packaged it up into a little <a href="http://github.com/nicolaskruchten/arduino/tree/46345beb49a7aad07aa8913778d446678ba7da82/libraries/WiiChuck">object-oriented Nunchuck library here</a>. While I was at it, I also packaged up my <a href="http://github.com/nicolaskruchten/arduino/tree/46345beb49a7aad07aa8913778d446678ba7da82/libraries/PololuMotorController">Pololu motor controller interface code</a>. The <a href="http://github.com/nicolaskruchten/arduino/blob/46345beb49a7aad07aa8913778d446678ba7da82/wiichuckControlledIRAvoidingLibrary/wiichuckControlledIRAvoidingLibrary.pde">robot code sketch</a> itself is on GitHub as well.</p>
<p>So after all this hardware and software work, I have remote-controllable wanderer robot! In the video above you can see that it&#8217;s capable of autonomous and controlled modes. I used the joystick to control motion, the C button to stop and the Z button to turn on autonomous mode. It&#8217;s pretty convenient to have a remote for a bot like this, so I can bring it back if it wanders underneath the bed, or turn it around if it gets stuck in a corner or something.</p>
<p>                     <div class="text-center"><a href="http://www.flickr.com/photos/nicolaskruchten/5108321764"><img class="flickr medium" title="DSC_0049" alt="DSC_0049" src="http://farm2.static.flickr.com/1089/5108321764_97e64269db.jpg" /></a></div>
                    <br />
                        <div class="text-center"><a href="http://www.flickr.com/photos/nicolaskruchten/5107724989"><img class="flickr medium" title="DSC_0062" alt="DSC_0062" src="http://farm2.static.flickr.com/1209/5107724989_5d979ea00f.jpg" /></a></div>
                    <br />
                        <div class="text-center"><a href="http://www.flickr.com/photos/nicolaskruchten/5108324056"><img class="flickr medium" title="DSC_0064" alt="DSC_0064" src="http://farm2.static.flickr.com/1169/5108324056_3f98638869.jpg" /></a></div>
                    <br />
                        <div class="text-center"><a href="http://www.flickr.com/photos/nicolaskruchten/5107726275"><img class="flickr medium" title="DSC_0009" alt="DSC_0009" src="http://farm5.static.flickr.com/4153/5107726275_37ec582a29.jpg" /></a></div>
                    <br />
                        <div class="text-center"><a href="http://www.flickr.com/photos/nicolaskruchten/5108324886"><img class="flickr medium" title="DSC_0013" alt="DSC_0013" src="http://farm2.static.flickr.com/1205/5108324886_2284eb7d69.jpg" /></a></div>
                    <br />
                        <div class="text-center"><a href="http://www.flickr.com/photos/nicolaskruchten/5108325360"><img class="flickr medium" title="DSC_0054" alt="DSC_0054" src="http://farm2.static.flickr.com/1372/5108325360_02afc1013a.jpg" /></a></div>
                    </p>
<p>For reference, and because I want to try out my syntax highlighter plugin, here is the  initialization code that works for my &#8216;Intec&#8217; wireless Wii Nunchuck (look in GitHub at how I handle retrying after failing initialization):</p>

<div class="highlight"><pre><code class="cpp"><span class="kt">void</span> <span class="n">WiiChuck</span><span class="o">::</span><span class="n">init</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span><span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0xF0</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x55</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

    <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span> <span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0xFB</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

    <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span><span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0xFA</span><span class="p">);</span>
    <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

    <span class="n">Wire</span><span class="p">.</span><span class="n">requestFrom</span><span class="p">(</span><span class="mh">0x52</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
    <span class="n">boolean</span> <span class="n">allFF</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">bytesReceived</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">Wire</span><span class="p">.</span><span class="n">available</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">byte</span> <span class="n">c</span> <span class="o">=</span> <span class="n">Wire</span><span class="p">.</span><span class="n">receive</span><span class="p">();</span>
        <span class="n">bytesReceived</span><span class="o">++</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">c</span> <span class="o">!=</span> <span class="mh">0xFF</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">allFF</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">if</span><span class="p">(</span><span class="n">bytesReceived</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

    <span class="k">if</span><span class="p">(</span><span class="n">allFF</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>

        <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span><span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0xF0</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0xAA</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

        <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span><span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x40</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

        <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span><span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x46</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

        <span class="n">Wire</span><span class="p">.</span><span class="n">beginTransmission</span><span class="p">(</span><span class="mh">0x52</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x4C</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">send</span> <span class="p">(</span><span class="mh">0x00</span><span class="p">);</span>
        <span class="n">Wire</span><span class="p">.</span><span class="n">endTransmission</span><span class="p">();</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>

        <span class="n">inSync</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
 ]]></content:encoded>
				</item>
			

		</channel>
	</rss>
